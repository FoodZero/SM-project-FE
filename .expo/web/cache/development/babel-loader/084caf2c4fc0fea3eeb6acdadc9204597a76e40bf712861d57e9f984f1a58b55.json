{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\eleme\\\\SM-project-FE\\\\SM-project-FE-1\\\\screens\\\\Signup\\\\signup.js\",\n  _this = this;\nimport React, { useCallback, useEffect } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { createRef, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Signup = function Signup() {\n  var navigation = useNavigation();\n  var _useForm = useForm({\n      defaultValues: {\n        UserEmail: \"\",\n        UserPassword: \"\",\n        UserPnum: \"\",\n        UserNick: \"\"\n      }\n    }),\n    control = _useForm.control,\n    handleSubmit = _useForm.handleSubmit,\n    errors = _useForm.formState.errors;\n  var onSubmit = function onSubmit(data) {\n    return console.log(data);\n  };\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    loading = _useState2[0],\n    setLoading = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    errortext = _useState4[0],\n    setErrortext = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    errortext2 = _useState6[0],\n    setErrortext2 = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isRegistraionSuccess = _useState8[0],\n    setIsRegistraionSuccess = _useState8[1];\n  var EmailInputRef = createRef();\n  var PasswordInputRef = createRef();\n  var PhonenumberInputRef = createRef();\n  var PhonenumberchkInputRef = createRef();\n  var NicknameInputRef = createRef();\n  var Error_MSG = {\n    Noinput: '필수 입력사항을 입력해주세요.',\n    EmailPttn: '올바른 이메일을 입력해주세요.',\n    PwPttn: \"8~16자리 영문+숫자+특수문자 조합하여 입력해주세요.\",\n    Idduplicate: \"이미 사용 중인 닉네임입니다.\"\n  };\n  return _jsxDEV(SafeAreaView, {\n    children: [_jsxDEV(View, {\n      children: _jsxDEV(Text, {\n        children: \" \\uD68C\\uC6D0\\uAC00\\uC785 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, _this), _jsxDEV(View, {\n      children: [_jsxDEV(Text, {\n        children: \"\\uC774\\uBA54\\uC77C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, _this), _jsxDEV(Controller, {\n        name: \"UserEmail\",\n        control: control,\n        rules: {\n          required: '이메일을 입력해 주세요.',\n          pattern: {\n            value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n            message: '유효하지 않은 이메일입니다.'\n          }\n        },\n        render: function render(_ref) {\n          var _ref$field = _ref.field,\n            onChange = _ref$field.onChange,\n            onBlur = _ref$field.onBlur,\n            value = _ref$field.value;\n          return _jsxDEV(TextInput, {\n            textColor: \"#AFAFAF\",\n            placeholder: \"이메일을 입력해 주세요.\",\n            onBlur: onBlur,\n            onChangeText: onChange,\n            value: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, _this), _jsxDEV(View, {\n      children: [_jsxDEV(Text, {\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, _this), _jsxDEV(TextInput, {\n        textColor: \"#AFAFAF\",\n        placeholder: \"8~16자리 영문 + 숫자 + 특수문자 조합\",\n        onChangeText: function onChangeText(UserPassword) {\n          return setUserPassword(UserPassword);\n        },\n        ref: PasswordInputRef,\n        returnKeyType: \"next\",\n        onSubmitEditing: function onSubmitEditing() {\n          return PhonenumberInputRef.current && PhonenumberInputRef.current.focus();\n        },\n        blurOnSubmit: false,\n        inputMode: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, _this), _jsxDEV(View, {\n      children: [_jsxDEV(Text, {\n        children: \"\\uC804\\uD654\\uBC88\\uD638\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, _this), _jsxDEV(TextInput, {\n        textColor: \"#AFAFAF\",\n        placeholder: \"-없이 입력\",\n        onChangeText: function onChangeText(UserPnum) {\n          return setUserPnum(UserPnum);\n        },\n        ref: PhonenumberInputRef,\n        returnKeyType: \"next\",\n        onSubmitEditing: function onSubmitEditing() {\n          return PhonenumberchkInputRef.current && PhonenumberchkInputRef.current.focus();\n        },\n        blurOnSubmit: false,\n        inputMode: \"tel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, _this), _jsxDEV(View, {\n      children: _jsxDEV(TextInput, {\n        textColor: \"#AFAFAF\",\n        placeholder: \"인증번호\",\n        onChangeText: function onChangeText(chkPnum) {\n          return setChkPnum(chkPnum);\n        },\n        ref: PhonenumberchkInputRef,\n        returnKeyType: \"next\",\n        onSubmitEditing: function onSubmitEditing() {\n          return NicknameInputRef.current && NicknameInputRef.current.focus();\n        },\n        blurOnSubmit: false,\n        inputMode: \"numeric\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, _this), _jsxDEV(View, {\n      children: [_jsxDEV(Text, {\n        children: \"\\uB2C9\\uB124\\uC784\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, _this), _jsxDEV(TextInput, {\n        textColor: \"#AFAFAF\",\n        onChangeText: function onChangeText(UserNick) {\n          return setUserNick(UserNick);\n        },\n        ref: NicknameInputRef,\n        returnKeyType: \"done\",\n        inputMode: \"text\",\n        blurOnSubmit: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, _this), _jsxDEV(View, {\n      children: _jsxDEV(TouchableOpacity, {\n        activeOpacity: 0.8,\n        onPress: handleSubmit(onSubmit),\n        children: _jsxDEV(Text, {\n          children: \"\\uC644\\uB8CC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 7\n  }, _this);\n};\nexport default Signup;","map":{"version":3,"names":["React","useCallback","useEffect","useNavigation","AsyncStorage","createRef","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","Image","ScrollView","SafeAreaView","useForm","Controller","axios","jsxDEV","_jsxDEV","Signup","navigation","_useForm","defaultValues","UserEmail","UserPassword","UserPnum","UserNick","control","handleSubmit","errors","formState","onSubmit","data","console","log","_useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","errortext","setErrortext","_useState5","_useState6","errortext2","setErrortext2","_useState7","_useState8","isRegistraionSuccess","setIsRegistraionSuccess","EmailInputRef","PasswordInputRef","PhonenumberInputRef","PhonenumberchkInputRef","NicknameInputRef","Error_MSG","Noinput","EmailPttn","PwPttn","Idduplicate","children","fileName","_jsxFileName","lineNumber","columnNumber","_this","name","rules","required","pattern","value","message","render","_ref","_ref$field","field","onChange","onBlur","textColor","placeholder","onChangeText","setUserPassword","ref","returnKeyType","onSubmitEditing","current","focus","blurOnSubmit","inputMode","setUserPnum","chkPnum","setChkPnum","setUserNick","activeOpacity","onPress"],"sources":["C:/Users/eleme/SM-project-FE/SM-project-FE-1/screens/Signup/signup.js"],"sourcesContent":["import React, { useCallback, useEffect } from \"react\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport {createRef, useState} from 'react';\r\nimport {\r\n    View,\r\n    Text,\r\n    TextInput,\r\n    TouchableOpacity,\r\n    StyleSheet,\r\n    Image,\r\n    ScrollView\r\n} from 'react-native';\r\nimport { SafeAreaView } from \"react-native-safe-area-context\";\r\nimport { useForm, Controller } from \"react-hook-form\"\r\n//import Styles from './Signupstyles';\r\nimport axios from \"axios\";\r\n\r\n//const EmailPattern = /^[0-9a-zA-Z]([-.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/i;\r\n//const PasswordPattern = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,15}$/\r\n//const PnumPattern = /^01(?:0|1|[6-9])(?:\\d{3}|\\d{4})\\d{4}$/\r\nconst Signup = () => {\r\n  const navigation = useNavigation();\r\n\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    defaultValues: {\r\n      UserEmail: \"\",\r\n      UserPassword: \"\",\r\n      UserPnum : \"\",\r\n      UserNick : \"\",\r\n    },\r\n  })\r\n  const onSubmit = (data) => console.log(data)\r\n\r\n  //const [UserEmail, setUserEmail] =useState('');\r\n  //const [UserPassword, setUserPassword] = useState('');\r\n  //const [UserPnum, setUserPnum] = useState('');\r\n  //const [chkPnum, setChkPnum] = useState('');\r\n  //const [UserNick, setUserNick] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [errortext, setErrortext] = useState('');\r\n  const [errortext2, setErrortext2] = useState('');\r\n  const [isRegistraionSuccess, setIsRegistraionSuccess] = useState(false);\r\n  //const [errortext, setErrortext] = useState('');\r\n  //const [Time, setTime] = useState(179)\r\n  //const {verification} = useSelector((state: RootState) => state.auth)\r\n  //const {expireAt} = verification.OTP\r\n\r\n  const EmailInputRef = createRef();\r\n  const PasswordInputRef = createRef();\r\n  const PhonenumberInputRef = createRef();\r\n  const PhonenumberchkInputRef = createRef();\r\n  const NicknameInputRef = createRef();\r\n\r\n  const Error_MSG = {\r\n    Noinput : '필수 입력사항을 입력해주세요.',\r\n    EmailPttn : '올바른 이메일을 입력해주세요.',\r\n    PwPttn : \"8~16자리 영문+숫자+특수문자 조합하여 입력해주세요.\",\r\n    Idduplicate : \"이미 사용 중인 닉네임입니다.\",\r\n  };\r\n\r\n    return (\r\n      <SafeAreaView>\r\n      <View>\r\n      <Text> 회원가입 </Text>\r\n      </View>\r\n \r\n      <View>\r\n        <Text>이메일</Text>\r\n        <Controller\r\n          name=\"UserEmail\"\r\n          control = {control}\r\n          rules={{\r\n            required: '이메일을 입력해 주세요.',\r\n            pattern: {\r\n              value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n              message: '유효하지 않은 이메일입니다.',\r\n            }\r\n          }}\r\n          render ={({field: {onChange, onBlur, value}}) => (\r\n            <TextInput\r\n          textColor= {\"#AFAFAF\"}\r\n          placeholder={\"이메일을 입력해 주세요.\"}\r\n          onBlur={onBlur}\r\n          onChangeText={onChange}\r\n          value={value}\r\n        />\r\n          )}\r\n          />\r\n          \r\n      </View>\r\n\r\n      <View>\r\n        <Text>비밀번호</Text>\r\n        <TextInput\r\n        textColor= {\"#AFAFAF\"}\r\n        placeholder={\"8~16자리 영문 + 숫자 + 특수문자 조합\"}\r\n        onChangeText={(UserPassword) => setUserPassword(UserPassword)}\r\n        ref = {PasswordInputRef}\r\n        returnKeyType=\"next\"\r\n        onSubmitEditing={() =>\r\n          PhonenumberInputRef.current && PhonenumberInputRef.current.focus()\r\n        }\r\n        blurOnSubmit = {false}\r\n        inputMode=\"text\"\r\n        />\r\n      </View>\r\n\r\n      <View>\r\n        <Text>전화번호</Text>\r\n        <TextInput\r\n        textColor= {\"#AFAFAF\"}\r\n        placeholder={\"-없이 입력\"}\r\n        onChangeText={(UserPnum) => setUserPnum(UserPnum)}\r\n        ref = {PhonenumberInputRef}\r\n        returnKeyType=\"next\"\r\n        onSubmitEditing={() =>\r\n          PhonenumberchkInputRef.current && PhonenumberchkInputRef.current.focus()\r\n        }\r\n        blurOnSubmit = {false}\r\n        inputMode=\"tel\"\r\n        />\r\n      </View>\r\n      <View>\r\n        <TextInput\r\n        textColor= {\"#AFAFAF\"}\r\n        placeholder={\"인증번호\"}\r\n        onChangeText={(chkPnum) => setChkPnum(chkPnum)}\r\n        ref = {PhonenumberchkInputRef}\r\n        returnKeyType=\"next\"\r\n        onSubmitEditing={() =>\r\n          NicknameInputRef.current && NicknameInputRef.current.focus()\r\n        }\r\n        blurOnSubmit = {false}\r\n        inputMode=\"numeric\"\r\n        />\r\n      </View>\r\n\r\n      <View>\r\n        <Text>닉네임</Text>\r\n        <TextInput\r\n        textColor= {\"#AFAFAF\"}\r\n        onChangeText={(UserNick) => setUserNick(UserNick)}\r\n        ref = {NicknameInputRef}\r\n        returnKeyType=\"done\"\r\n        inputMode=\"text\"\r\n        blurOnSubmit = {true}\r\n        />\r\n      </View>\r\n\r\n      <View>\r\n        <TouchableOpacity\r\n          activeOpacity={0.8}\r\n          onPress ={handleSubmit(onSubmit)}>\r\n          <Text>완료</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      </SafeAreaView>\r\n    );\r\n};\r\nexport default Signup;\r\n/*\r\nuseEffect(() => {\r\n  const [userEmail, setUseremail] = useState(\"\");\r\n  const [userName, setUsername] = useState(\"\");\r\n  const [userPassword, setUserpassword] = useState(\"\");\r\n  const [userPnum, setUserpnum] = useState(\"\");\r\n\r\n  const [errortext, setErrortext] = useState('');\r\n  const [isRegistraionSuccess, setIsRegistraionSuccess] = useState(false);\r\n\r\n  const idInputRef = createRef();\r\n  const gradeInputRef = createRef(); \r\n  const passwordInputRef = createRef();\r\n  const passwordchkInputRef = createRef();\r\n  const nameInputRef = createRef();\r\n  const [isSelected, setSelection] = useState(false);\r\n\r\n  async function getData() {\r\n    try {\r\n      const value = await AsyncStorage.getItem('userAccessToken')\r\n      if(value !== null) {\r\n        console.log(value);\r\n      }\r\n    } catch(e) {\r\n      console.log('error', value);\r\n    }\r\n  }\r\n  getData();\r\n},[]); \r\n\r\n  const SubmitButton = () => {\r\n      setErrortext('');\r\n\r\n      if(!userEmail){\r\n          alert('이메일을 입력해주세요');\r\n          return;\r\n      }\r\n      if(!userPassword){\r\n          alert('비밀번호를 입력해주세요');\r\n          return;\r\n      }\r\n      if(!userName){\r\n          alert('이름을 입력해주세요');\r\n          return;\r\n      }\r\n      if(!userBirth){\r\n          alert('생년월일을 입력해주세요');\r\n          return;\r\n      }\r\n      if(!userPnum){\r\n          alert('전화번호를 입력해주세요');\r\n          return;\r\n      }\r\n\r\n      var dataToSend = {\r\n          db_Email : userEmail,\r\n          db_Password : userPassword,\r\n          db_Name : userName,\r\n          db_Birth : userBirth,\r\n          db_Pnum : userPnum,\r\n      };\r\n\r\n      var formBody = [];\r\n      for (var key in dataToSend){\r\n          var encodedKey = encodeURIComponent(key);\r\n          var encodedValue = encodeURIComponent(dataToSend(key));\r\n          formBody.push(encodedKey + '=' + encodedValue)\r\n      }\r\n      formBody =  formBody.join('&');\r\n\r\n//서버 연결하기 >> async로 전환 중\r\n\r\n      fetch('https://localhost: 3306/api/members/register',\r\n      {\r\n          method : 'POST',\r\n          body : formBody,\r\n          headers : {\r\n              'Content-Type': 'application/json',\r\n          },\r\n      })\r\n      .then((response) => response.json())\r\n      .then((responseJson) => {\r\n          //Hide Loader\r\n          setLoading(false);\r\n          setErrortext2('');\r\n          console.log(responseJson);\r\n          // If server response message same as Data Matched\r\n          if (responseJson.status === 'success') {\r\n          setIsRegistraionSuccess(true);\r\n          console.log('Registration Successful. Please Login to proceed');\r\n          } else if (responseJson.status === 'duplicate') {\r\n          setErrortext2('이미 존재하는 아이디입니다.');\r\n          }\r\n      })\r\n      .catch((error) => {\r\n          //Hide Loader\r\n          setLoading(false);\r\n          console.error(error);\r\n    });\r\n    \r\n});\r\n*/\r\n/*\r\n  const SignupPressed = useCallback(async () =>{\r\n    if(loading){\r\n      return;\r\n    }\r\n    try{\r\n      setLoading(true);\r\n      const response = await axios.post('${Config.API_URL}/api/members/register',{\r\n        Email,\r\n        Password,\r\n\r\n      })\r\n    }\r\n  })\r\n  */\r\n/*\r\n  axios.post({\r\n    url : 'https://localhost:3006/api/members/register',\r\n    method : 'post',\r\n    headers : {\r\n      \"Content-type\" : \"application/json\"\r\n    },\r\n    data: {\r\n      email : eail ?? '',\r\n      password :,\r\n      nickname :,\r\n      phone : ,\r\n    }\r\n  })\r\n  .then((res) =>{\r\n    if(validation){\r\n      window.localStorage.setItem('signupResponseData', JSON.stringify(res.data));\r\n      TabRouter.push('')\r\n    }\r\n  })\r\n\r\n  \r\n  var dataToSend = {\r\n    email : UserEmail,\r\n    password : UserPassword,\r\n    nickname : UserNick,\r\n    phone : UserPnum,\r\n  };\r\n\r\n  var formBody = [];\r\n  for (var key in dataToSend) {\r\n    var encodedKey = encodeURIComponent(key);\r\n    var encodedValue = encodeURIComponent(dataToSend[key]);\r\n    formBody.push(encodedKey + '=' + encodedValue);\r\n  }\r\n  formBody = formBody.join('&');\r\n\r\n  fetch('https://172.30.1.99:3306/api/members/register', {\r\n    method: 'POST',\r\n    body: formBody,\r\n    headers: {\r\n      //Header Defination\r\n      'Content-Type': 'application/json;charset=UTF-8',\r\n    },\r\n  })\r\n    .then((response) => response.json())\r\n    .then((responseJson) => {\r\n      //Hide Loader\r\n      setLoading(false);\r\n      setErrortext2('');\r\n      console.log(responseJson);\r\n      // If server response message same as Data Matched\r\n      if (responseJson.status === 'success') {\r\n        setIsRegistraionSuccess(true);\r\n        console.log('Registration Successful. Please Login to proceed');\r\n      } else if (responseJson.status === 'duplicate') {\r\n        setErrortext2('이미 존재하는 아이디입니다.');\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      //Hide Loader\r\n      setLoading(false);\r\n      console.error(error);\r\n    });\r\n\r\n    <SafeAreaView style = {Styles.Container}>\r\n      <View style = {Styles.HomeContainer}>\r\n      <Text style={Styles.HomeText}> 회원가입 </Text>\r\n      </View>\r\n \r\n      <View style={Styles.InputArea}>\r\n        <Text style={Styles.Lables}>이메일</Text>\r\n        <Controller\r\n          control = {control}\r\n          rules={{\r\n            required: true,\r\n          }}\r\n          render ={({field: {onChange, onBlur, value}}) => (\r\n            <TextInput\r\n          style={Styles.TextForm}\r\n          textColor= {\"#AFAFAF\"}\r\n          placeholder={\"이메일을 입력해 주세요.\"}\r\n          onBlur={onBlur}\r\n          onChangeText={onChange}\r\n          value={value}\r\n        />\r\n          )}name=\"UserEmail\"\r\n          />\r\n          {errors.UserEmail && <Text>이메일을 입력해 주세요.</Text>}\r\n      </View>\r\n\r\n      <View style={Styles.InputArea}>\r\n        <Text style={Styles.Lables}>비밀번호</Text>\r\n        <TextInput \r\n        style={Styles.TextForm}\r\n        textColor= {\"#AFAFAF\"}\r\n        placeholder={\"8~16자리 영문 + 숫자 + 특수문자 조합\"}\r\n        onChangeText={(UserPassword) => setUserPassword(UserPassword)}\r\n        ref = {PasswordInputRef}\r\n        returnKeyType=\"next\"\r\n        onSubmitEditing={() =>\r\n          PhonenumberInputRef.current && PhonenumberInputRef.current.focus()\r\n        }\r\n        blurOnSubmit = {false}\r\n        inputMode=\"text\"\r\n        />\r\n      </View>\r\n\r\n      <View style={Styles.InputArea}>\r\n        <Text style={Styles.Lables}>전화번호</Text>\r\n        <TextInput \r\n        style={Styles.TextForm}\r\n        textColor= {\"#AFAFAF\"}\r\n        placeholder={\"-없이 입력\"}\r\n        onChangeText={(UserPnum) => setUserPnum(UserPnum)}\r\n        ref = {PhonenumberInputRef}\r\n        returnKeyType=\"next\"\r\n        onSubmitEditing={() =>\r\n          PhonenumberchkInputRef.current && PhonenumberchkInputRef.current.focus()\r\n        }\r\n        blurOnSubmit = {false}\r\n        inputMode=\"tel\"\r\n        />\r\n      </View>\r\n      <View style={Styles.InputArea}>\r\n        <TextInput \r\n        style={Styles.TextForm}\r\n        textColor= {\"#AFAFAF\"}\r\n        placeholder={\"인증번호\"}\r\n        onChangeText={(chkPnum) => setChkPnum(chkPnum)}\r\n        ref = {PhonenumberchkInputRef}\r\n        returnKeyType=\"next\"\r\n        onSubmitEditing={() =>\r\n          NicknameInputRef.current && NicknameInputRef.current.focus()\r\n        }\r\n        blurOnSubmit = {false}\r\n        inputMode=\"numeric\"\r\n        />\r\n      </View>\r\n\r\n      <View style={Styles.InputArea}>\r\n        <Text style={Styles.Lables}>닉네임</Text>\r\n        <TextInput \r\n        style={Styles.TextForm}\r\n        textColor= {\"#AFAFAF\"}\r\n        onChangeText={(UserNick) => setUserNick(UserNick)}\r\n        ref = {NicknameInputRef}\r\n        returnKeyType=\"done\"\r\n        inputMode=\"text\"\r\n        blurOnSubmit = {true}\r\n        />\r\n      </View>\r\n\r\n      <View style={Styles.ButtonArea}>\r\n        <TouchableOpacity\r\n          style={Styles.Button}\r\n          activeOpacity={0.8}\r\n          onPress ={()=> navigation.navigate(\"Login\", {screen : 'Login'})}>\r\n          <Text style={Styles.ButtonText}>완료</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      </SafeAreaView>\r\n    );\r\n  */\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,SAAS,QAAQ,OAAO;AACrD,SAASC,aAAa,QAAQ,0BAA0B;AACxD,OAAOC,YAAY,MAAM,2CAA2C;AACpE,SAAQC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,UAAA;AAU1C,SAASC,YAAY,QAAQ,gCAAgC;AAC7D,SAASC,OAAO,EAAEC,UAAU,QAAQ,iBAAiB;AAErD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAK1B,IAAMC,MAAM,GAAG,SAATA,MAAMA,CAAA,EAAS;EACnB,IAAMC,UAAU,GAAGlB,aAAa,CAAC,CAAC;EAElC,IAAAmB,QAAA,GAIIP,OAAO,CAAC;MACVQ,aAAa,EAAE;QACbC,SAAS,EAAE,EAAE;QACbC,YAAY,EAAE,EAAE;QAChBC,QAAQ,EAAG,EAAE;QACbC,QAAQ,EAAG;MACb;IACF,CAAC,CAAC;IAVAC,OAAO,GAAAN,QAAA,CAAPM,OAAO;IACPC,YAAY,GAAAP,QAAA,CAAZO,YAAY;IACCC,MAAM,GAAAR,QAAA,CAAnBS,SAAS,CAAID,MAAM;EASrB,IAAME,QAAQ,GAAG,SAAXA,QAAQA,CAAIC,IAAI;IAAA,OAAKC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EAAA;EAO5C,IAAAG,SAAA,GAA8B9B,QAAQ,CAAC,KAAK,CAAC;IAAA+B,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAtCG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAE1B,IAAAI,UAAA,GAAkCnC,QAAQ,CAAC,EAAE,CAAC;IAAAoC,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAvCE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAC9B,IAAAG,UAAA,GAAoCvC,QAAQ,CAAC,EAAE,CAAC;IAAAwC,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAAzCE,UAAU,GAAAD,UAAA;IAAEE,aAAa,GAAAF,UAAA;EAChC,IAAAG,UAAA,GAAwD3C,QAAQ,CAAC,KAAK,CAAC;IAAA4C,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAAhEE,oBAAoB,GAAAD,UAAA;IAAEE,uBAAuB,GAAAF,UAAA;EAMpD,IAAMG,aAAa,GAAGhD,SAAS,CAAC,CAAC;EACjC,IAAMiD,gBAAgB,GAAGjD,SAAS,CAAC,CAAC;EACpC,IAAMkD,mBAAmB,GAAGlD,SAAS,CAAC,CAAC;EACvC,IAAMmD,sBAAsB,GAAGnD,SAAS,CAAC,CAAC;EAC1C,IAAMoD,gBAAgB,GAAGpD,SAAS,CAAC,CAAC;EAEpC,IAAMqD,SAAS,GAAG;IAChBC,OAAO,EAAG,kBAAkB;IAC5BC,SAAS,EAAG,kBAAkB;IAC9BC,MAAM,EAAG,gCAAgC;IACzCC,WAAW,EAAG;EAChB,CAAC;EAEC,OACE3C,OAAA,CAACL,YAAY;IAAAiD,QAAA,GACb5C,OAAA,CAACZ,IAAI;MAAAwD,QAAA,EACL5C,OAAA,CAACX,IAAI;QAAAuD,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAAM;IAAC;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KACb,CAAC,EAEPjD,OAAA,CAACZ,IAAI;MAAAwD,QAAA,GACH5C,OAAA,CAACX,IAAI;QAAAuD,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAAM,CAAC,EAChBjD,OAAA,CAACH,UAAU;QACTqD,IAAI,EAAC,WAAW;QAChBzC,OAAO,EAAIA,OAAQ;QACnB0C,KAAK,EAAE;UACLC,QAAQ,EAAE,eAAe;UACzBC,OAAO,EAAE;YACPC,KAAK,EAAE,0CAA0C;YACjDC,OAAO,EAAE;UACX;QACF,CAAE;QACFC,MAAM,EAAG,SAAAA,OAAAC,IAAA;UAAA,IAAAC,UAAA,GAAAD,IAAA,CAAEE,KAAK;YAAGC,QAAQ,GAAAF,UAAA,CAARE,QAAQ;YAAEC,MAAM,GAAAH,UAAA,CAANG,MAAM;YAAEP,KAAK,GAAAI,UAAA,CAALJ,KAAK;UAAA,OACxCtD,OAAA,CAACV,SAAS;YACZwE,SAAS,EAAG,SAAU;YACtBC,WAAW,EAAE,eAAgB;YAC7BF,MAAM,EAAEA,MAAO;YACfG,YAAY,EAAEJ,QAAS;YACvBN,KAAK,EAAEA;UAAM;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAC,KACd,CAAC;QAAA;MACE;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KACD,CAAC;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAEA,CAAC,EAEPjD,OAAA,CAACZ,IAAI;MAAAwD,QAAA,GACH5C,OAAA,CAACX,IAAI;QAAAuD,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAAM,CAAC,EACjBjD,OAAA,CAACV,SAAS;QACVwE,SAAS,EAAG,SAAU;QACtBC,WAAW,EAAE,0BAA2B;QACxCC,YAAY,EAAE,SAAAA,aAAC1D,YAAY;UAAA,OAAK2D,eAAe,CAAC3D,YAAY,CAAC;QAAA,CAAC;QAC9D4D,GAAG,EAAI/B,gBAAiB;QACxBgC,aAAa,EAAC,MAAM;QACpBC,eAAe,EAAE,SAAAA,gBAAA;UAAA,OACfhC,mBAAmB,CAACiC,OAAO,IAAIjC,mBAAmB,CAACiC,OAAO,CAACC,KAAK,CAAC,CAAC;QAAA,CACnE;QACDC,YAAY,EAAI,KAAM;QACtBC,SAAS,EAAC;MAAM;QAAA3B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KACf,CAAC;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KACE,CAAC,EAEPjD,OAAA,CAACZ,IAAI;MAAAwD,QAAA,GACH5C,OAAA,CAACX,IAAI;QAAAuD,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAAM,CAAC,EACjBjD,OAAA,CAACV,SAAS;QACVwE,SAAS,EAAG,SAAU;QACtBC,WAAW,EAAE,QAAS;QACtBC,YAAY,EAAE,SAAAA,aAACzD,QAAQ;UAAA,OAAKkE,WAAW,CAAClE,QAAQ,CAAC;QAAA,CAAC;QAClD2D,GAAG,EAAI9B,mBAAoB;QAC3B+B,aAAa,EAAC,MAAM;QACpBC,eAAe,EAAE,SAAAA,gBAAA;UAAA,OACf/B,sBAAsB,CAACgC,OAAO,IAAIhC,sBAAsB,CAACgC,OAAO,CAACC,KAAK,CAAC,CAAC;QAAA,CACzE;QACDC,YAAY,EAAI,KAAM;QACtBC,SAAS,EAAC;MAAK;QAAA3B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KACd,CAAC;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KACE,CAAC,EACPjD,OAAA,CAACZ,IAAI;MAAAwD,QAAA,EACH5C,OAAA,CAACV,SAAS;QACVwE,SAAS,EAAG,SAAU;QACtBC,WAAW,EAAE,MAAO;QACpBC,YAAY,EAAE,SAAAA,aAACU,OAAO;UAAA,OAAKC,UAAU,CAACD,OAAO,CAAC;QAAA,CAAC;QAC/CR,GAAG,EAAI7B,sBAAuB;QAC9B8B,aAAa,EAAC,MAAM;QACpBC,eAAe,EAAE,SAAAA,gBAAA;UAAA,OACf9B,gBAAgB,CAAC+B,OAAO,IAAI/B,gBAAgB,CAAC+B,OAAO,CAACC,KAAK,CAAC,CAAC;QAAA,CAC7D;QACDC,YAAY,EAAI,KAAM;QACtBC,SAAS,EAAC;MAAS;QAAA3B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAClB;IAAC;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KACE,CAAC,EAEPjD,OAAA,CAACZ,IAAI;MAAAwD,QAAA,GACH5C,OAAA,CAACX,IAAI;QAAAuD,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAAM,CAAC,EAChBjD,OAAA,CAACV,SAAS;QACVwE,SAAS,EAAG,SAAU;QACtBE,YAAY,EAAE,SAAAA,aAACxD,QAAQ;UAAA,OAAKoE,WAAW,CAACpE,QAAQ,CAAC;QAAA,CAAC;QAClD0D,GAAG,EAAI5B,gBAAiB;QACxB6B,aAAa,EAAC,MAAM;QACpBK,SAAS,EAAC,MAAM;QAChBD,YAAY,EAAI;MAAK;QAAA1B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KACpB,CAAC;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KACE,CAAC,EAEPjD,OAAA,CAACZ,IAAI;MAAAwD,QAAA,EACH5C,OAAA,CAACT,gBAAgB;QACfsF,aAAa,EAAE,GAAI;QACnBC,OAAO,EAAGpE,YAAY,CAACG,QAAQ,CAAE;QAAA+B,QAAA,EACjC5C,OAAA,CAACX,IAAI;UAAAuD,QAAA,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KAAM;MAAC;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KACC;IAAC;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KACf,CAAC;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAC,KACO,CAAC;AAErB,CAAC;AACD,eAAehD,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}